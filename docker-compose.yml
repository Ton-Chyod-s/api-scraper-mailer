version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_container
    ports:
      - "1000:1000"
    env_file:
      - .env
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL_PROD}
    command: >
      /bin/sh -c "./wait-for-it.sh db:5432 -- npm start"
    networks:
      - app-network

  db:
    image: postgres
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - api
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok_tunnel
    command: http nginx:443
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
    ports:
      - "4040:4040"
    depends_on:
      - nginx
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    external: true
